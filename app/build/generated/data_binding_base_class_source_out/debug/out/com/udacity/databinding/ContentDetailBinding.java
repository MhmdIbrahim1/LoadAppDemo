// Generated by view binder compiler. Do not edit!
package com.udacity.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.viewbinding.ViewBinding;
import com.udacity.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentDetailBinding implements ViewBinding {
  @NonNull
  private final MotionLayout rootView;

  @NonNull
  public final Button btnOk;

  @NonNull
  public final TextView downloadStatus;

  @NonNull
  public final TextView fileName;

  @NonNull
  public final TextView tvFile;

  @NonNull
  public final TextView tvStatus;

  private ContentDetailBinding(@NonNull MotionLayout rootView, @NonNull Button btnOk,
      @NonNull TextView downloadStatus, @NonNull TextView fileName, @NonNull TextView tvFile,
      @NonNull TextView tvStatus) {
    this.rootView = rootView;
    this.btnOk = btnOk;
    this.downloadStatus = downloadStatus;
    this.fileName = fileName;
    this.tvFile = tvFile;
    this.tvStatus = tvStatus;
  }

  @Override
  @NonNull
  public MotionLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_ok;
      Button btnOk = rootView.findViewById(id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.download_status;
      TextView downloadStatus = rootView.findViewById(id);
      if (downloadStatus == null) {
        break missingId;
      }

      id = R.id.file_name;
      TextView fileName = rootView.findViewById(id);
      if (fileName == null) {
        break missingId;
      }

      id = R.id.tv_file;
      TextView tvFile = rootView.findViewById(id);
      if (tvFile == null) {
        break missingId;
      }

      id = R.id.tv_status;
      TextView tvStatus = rootView.findViewById(id);
      if (tvStatus == null) {
        break missingId;
      }

      return new ContentDetailBinding((MotionLayout) rootView, btnOk, downloadStatus, fileName,
          tvFile, tvStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
